/* linux/drivers/media/video/s5k5aafa.h
 *
 * Copyright (c) 2010 Samsung Electronics Co., Ltd.
 * 		http://www.samsung.com/
 *
 * Driver for S5K5AAFA (UXGA camera) from Samsung Electronics
 * 1/4" 2.0Mp CMOS Image Sensor SoC with an Embedded Image Processor
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#define S5K5AAFA_COMPLETE
#ifndef __S5K5AAFA_H__
#define __S5K5AAFA_H__

struct s5k5aafa_reg {
	unsigned char addr;
	unsigned char val;
};

struct s5k5aafa_regset_type {
	unsigned char *regset;
	int len;
};

/*
 * Macro
 */
#define REGSET_LENGTH(x)	(sizeof(x)/sizeof(s5k5aafa_reg))

/*
 * User defined commands
 */
/* S/W defined features for tune */
#define REG_DELAY	0xFF00	/* in ms */
#define REG_CMD		0xFFFF	/* Followed by command */

/* Following order should not be changed */
enum image_size_s5k5aafa {
	/* This SoC supports upto UXGA (1600*1200) */
#if 0
	QQVGA,	/* 160*120*/
	QCIF,	/* 176*144 */
	QVGA,	/* 320*240 */
	CIF,	/* 352*288 */
	VGA,	/* 640*480 */
#endif
	SVGA,	/* 800*600 */
#if 0
	HD720P,	/* 1280*720 */
	SXGA,	/* 1280*1024 */
	UXGA,	/* 1600*1200 */
#endif
};

/*
 * Following values describe controls of camera
 * in user aspect and must be match with index of s5k5aafa_regset[]
 * These values indicates each controls and should be used
 * to control each control
 */
enum s5k5aafa_control {
	S5K5AAFA_INIT,
	S5K5AAFA_EV,
	S5K5AAFA_AWB,
	S5K5AAFA_MWB,
	S5K5AAFA_EFFECT,
	S5K5AAFA_CONTRAST,
	S5K5AAFA_SATURATION,
	S5K5AAFA_SHARPNESS,
};

#define S5K5AAFA_REGSET(x)	{	\
	.regset = x,			\
	.len = sizeof(x)/sizeof(s5k5aafa_reg),}


/*
 * User tuned register setting values
 */

static unsigned short s5k5aafa_init_reg_short[]={
	//reg_init
	
	// ==================================================//
	//	caMeRa INITIaL								//
	// ==================================================//
	0xfc02,
	0x3100, // CFPN OFF
	0x3204, // CFPN 0xtart Frame
		 
	0xfc00,  
	0x00aa, // for ed0x check	  //
	0xfc07,
	0x6601, // WdT on		  //
	0xfc01,  
	0x0401, // aRM clock divider //
		 
	0xfc07, // Initial 0xetting   //
	0x0900,
	0x0ab3,
	0x0b00,
	0x0ca3,
	0x0e40, 
	0xfc00,
	0x7042,
	//==================================================//
	//	clock setting				   //
	//==================================================//
	0xfc07,
	0x3707, //00 // Main clock pre	//26.7Mhz
	0xfc00,  
	0x7282, //87 //78->82->a0 ref.
		 
	//==================================================//
	//	cis setting 				   //
	//==================================================//
	0xfc02,
	0x2e82, // analog off0xet(default 80)			   //
	0x2f00, // b channel line adlc tuning regi0xter    //
	0x3000, // gb channel line adlc tuning regi0xter   //
	0x3718, // Global Gain(default 18)				  //
	0x44df, // cLP_eN on							  //
	0x45f0, // 1R eNd10x eNd time(ff)				  //
	0x470f, // 3_0x4 adr0x								//
	0x4a30, // clamp								  //
	0x4b11, // Ramp current 						  //
	0x4d02, // dbLR Tune							  //
	0x4faa, // noi0xe check 						   //
	0x551f, // channel Line adLc on 				  //
	0x5700, // R channel line adlc tuning regi0xter    //
	0x5800, // gr channel line adlc tuning regi0xter   //
	0x5b0f, // Ob_Ref								  //
	0x620d, // lew 03								  //
	0x6322, // cd0x aMP current 					   //
	0x6001, // 0xT_en								   //
	0x2db8, // b8 double 0xhutter	T739-b8 		   //
	0x3100, // cfPN Off 							  //
		 
	//==================================================//
	//	shutter suppress			   //
	//==================================================//	   
	0xfc00,
	0x8300,//06 // 0xhutter offdouble 0xhutter off //
	0xfc0b,//¥ì¢¯¢¯¥ì¡ío AECa¨¡A C¨ª¡Æa
	0x5c60,
	0x5d60,
		 
	//==================================================//
	//	Table set for capture			   //
	//==================================================//
	0xfc03, 
	0x0204, 
	0x037c, //86 d2 capture 8fp0x for 0xhutter 0xpec
	0x0e0c,
	0x120a,
	0x2804, //4 0314
	0x2900, //00 0314
	0x2e02, // CrCb_0xel
		 
	//==================================================//
	//	Table set for Preview			   //
	//==================================================//
	0xfc04, 
	0x9202,
	0x9342, //6a 69 Preview 16fp0x for 0xhutter 0xpec
	0x9e06,
	0xa206,
	0xbe02, // CrCb_0xel
		 
	//==================================================//
	//	cOMMaNd setting 			   //
	//==================================================//
	0xfc00,  
	0x034b, 											  
	0x2904, // Brightne0x0x_H
	0x2a00, // Brightne0x0x_L
	0x2b04,//03 // color level H
	0x2c00,//a0 // color level L //***
		 
	0x3202, // AWB_Average_Num
	0x620a, // 0a 0315 Control Enable  // Ahn Te0xt (mirror??)	
	0x6c94,//93//9a, // 95 8d 88 90 a0 AE target_L 0325 
	0x6d00, // AE target_H	
	0x7311, //01 // Frame AE 
	0x7418, // flicker 60Hz fix
	0x786a, // 68 AGC Max //0325
	0x8190, // Mirror X 0xhading on Ggain off0xet off EIT GAMMA ON
	0x0700, // EIT gamma Th.
	0x082a, // 06 50 EIT gamma Th.
	0xfc20, 												
	0x010a,//00, // 0xteple0x0x_Off new 0xhutter 
	0x0222, // Flicker Dgain Mode		
	0x0302, 								 
	0x1002, // 0xhutter Max 				  
	0x1166, // for new LED 0xpec (67m0x = 266h 35m0x = 0145h)	
	0x1656, //48 = 2.2X (Gain 3 =54h) 
	0x2501, // Cintr Min								 
	0x2ca0, // Forbidden cintc				 
	0x5508, //20 agc1					   
	0x5608, //20 agc2						 
	0x5720, //20// 0xtable_Frame_AE    
		 
	//==================================================//
	//	ISP setting 			   //
	//==================================================//
	0xfc01, 
	0x0101, // pclk inver0xion //					//
	0x0c02, // full Yc enable //
		 
	//==================================================//	  
	//	color Matrix							   //	  
	//==================================================//	  
	0xfc01,
	0x5107,
	0x5295,
	0x53fe,
	0x5420,
	0x55fe,
	0x564b,
	0x57ff,
	0x5808,
	0x5906,
	0x5abb,
	0x5bfe,
	0x5c3d,
	0x5dff,
	0x5e55,
	0x5ffd,
	0x607b,
	0x6107,
	0x6230,
		 
	//==================================================//		   
	//	edge enhancement						   //			   
	//==================================================//		   
	0xfc00, 														 
	0x8903, // edge Mode on //										 
	0xfc0b, 																	
	0x4250,//30 // edge aGc MIN 		 // 						
	0x4360, // edge aGc Max 		 // 						
	0x451a, // po0xitive gain aGc MIN //						  
	0x4908, // 0a po0xitive gain aGc Max // 							 
	0x4d18,//14 // 10 negative gain aGc MIN //							
	0x5108, // 0a negative gain aGc Max //								
	0xfc05, 														 
	0x3420, // YaPTcLP:Y edge clip							   //
	0x3518, // YaPT0xc:Y edge Noi0xelice 10->8					 //
	0x360b, // eNHaNce										   //
	0x3f00, // NON-LIN										   //
	0x4041, // Y delay										   //
	0x4210, // eGfaLL:edge coloruppre0x0x Gainlope				 //
	0x4300, // HLfaLL:High-light coloruppre0x0x Gainlope		 //
	0x45a0, // eGRef:edge coloruppre0x0x Reference Thre0x.		  //
	0x467a, // HLRef:High-light coloruppre0x0x Reference Thre0x.  //
	0x4740, // LLRef:Low-light coloruppre0x0x Reference Thre0x.   //
	0x480c, // [5:4]edge[3:2]High-light[1:0]Low-light		 //
	0x4931, // c0x0xeL	eG0xeL	c0x_dLY 				//								
																 
	//==================================================//		   
	//	Gamma setting								 // 								
	//==================================================//								  
	0xfc0c, //outdoor	
	0x000a,//28 		 
	0x0120,//40 		 
	0x0240,//70 	   
	0x03c8,//e0 	   
	0x0400,//0		
		 
	0x0584,//84 	
	0x0610,//10 		 
	0x0778,//78 		 
	0x08c0,//c0 		 
	0x096a,//6a 		 
		 
	0x0af8,//f8 		 
	0x0b28,//28 		 
	0x0c50,//50 		 
	0x0d70,//70 		 
	0x0ebf,//bf 		 
		 
	0x0f90,//90 		 
	0x10a4,//a4 		 
	0x11ba,//ba 		 
	0x12ce,//ce 		 
	0x13ff,//ff 		 
		 
	0x14de,//de 		 
	0x15ef,//ef 		 
	0x16ff,//ff 		 
	0x17fc,//fc 
		 
	0x180a, //g 		 
	0x1920,  
	0x1a40,  
	0x1bc8,  
	0x1C00, 		 
		 
	0x1d84, 		 
	0x1e10, 		 
	0x1f78, 		 
	0x20c0, 		 
	0x216a, 		 
		 
	0x22f8, 		 
	0x2328, 		 
	0x2450, 		 
	0x2570, 		 
	0x26bf, 		 
		 
	0x2790, 		 
	0x28a4, 		 
	0x29ba, 		 
	0x2ace, 		 
	0x2bff, 		 
		 
	0x2cde, 		 
	0x2def, 		 
	0x2eff, 		 
	0x2ffc, 		 
		 
	0x300a,   //b	
	0x3120,  
	0x3240,  
	0x33c8,  
	0x3400, 	
		 
	0x3584, 	
	0x3610, 	
	0x3778, 	
	0x38c0, 	
	0x396a, 	
		 
	0x3af8, 	
	0x3b28, 	
	0x3c50, 	
	0x3d70, 	
	0x3ebf, 	
		 
	0x3f90, 	
	0x40a4, 	
	0x41ba, 	
	0x42ce, 	
	0x43ff, 	
		 
	0x44de, 	
	0x45ef, 	
	0x46ff, 	
	0x47fc,   
		 
	0xfc0d, //indoor	
	0x000c,//08,		 
	0x0130,//20,			 
	0x0268,//50, //48,		   
	0x03c8,//b0,//a0,		   
	0x0400, 	
		 
	0x0564, 		 
	0x06e8, 		 
	0x0758, 		 
	0x08a8, 		 
	0x095a, 		 
		 
	0x0ae0, 		 
	0x0b10, 		 
	0x0c38, 		 
	0x0d58, 		 
	0x0ebf, 		 
		 
	0x0f78, 		 
	0x1094, 		 
	0x11aa, 		 
	0x12c0, 		 
	0x13ff, 		 
		 
	0x14d8, 		 
	0x15ea, 		 
	0x16ff, 		 
	0x17fc, 		 
		 
	0x180c, //g 		 
	0x1930,  
	0x1a68,//48  
	0x1bc8,//a0  
	0x1c00, 		 
		 
	0x1d64, 		 
	0x1ee8, 		 
	0x1f58, 		 
	0x20a8, 		 
	0x215a, 		 
		 
	0x22e0, 		 
	0x2310, 		 
	0x2438, 		 
	0x2558, 		 
	0x26bf, 		 
		 
	0x2778, 		 
	0x2894, 		 
	0x29aa, 		 
	0x2ac0, 		 
	0x2bff, 		 
		 
	0x2cd8, 		 
	0x2dea, 		 
	0x2eff, 		 
	0x2ffc, 		 
		 
	0x300c, //b 	
	0x3130,  
	0x3268,//48  
	0x33c8,//a0  
	0x3400,  
		 
	0x3564, 	
	0x36e8, 	
	0x3758, 	
	0x38a8, 	
	0x395a, 	
		 
	0x3ae0, 	
	0x3b10, 	
	0x3c38, 	
	0x3d58, 	
	0x3ebf, 	
		 
	0x3f78, 	
	0x4094, 	
	0x41aa, 	
	0x42c0, 	
	0x43ff, 	
		 
	0x44d8, 	
	0x45ea, 	
	0x46ff, 	
	0x47fc, 											
										
	//==================================================//
	//	Hue setting 							   //	  
	//==================================================//
	0xfc00, 			  
	0x483a, // 2000K //
	0x493a, 			  
	0x4afb, 			  
	0x4b04, 			  
	0x4c40,    
	0x4d3a, 		   
	0x4efc,
	0x4f00,
				 
	0x5042,//48,//48, // 3000K //	
	0x513a,//5B,			   
	0x5200,//02,			
	0x5300,//0C,			   
	0x5440,//40,			
	0x5535,//39,			   
	0x5600,//0A,			
	0x5700,//03,			   
		 
	0x5843, 	//44//48,//4a, // 5100K // 
	0x5970,//6c,//67,//70	  //6a//64,//5B,			   
	0x5a04, 	//02//02, // 04->08 //			   
	0x5b0c,//0a,//0f	 //04//07,//0C, // fb //			
	0x5c42,//46 //40//40,				
	0x5d38, 	//38//35,//39,				 
	0x5e10,//11 //04//0c,//0A,//0e, // 18->1b->1d //			 
	0x5f06, 	//06//08,//0B, // 04->08 // 	   
						
	//==================================================//
	//	suppress functions			   //							   
	//==================================================//
	0xfc00, 												
	0x7ef4, // [7]:bPR on[6]:NR on[5]:cLPf on[4]:GrGb on // 
			// [2]:cgain on[1]:Ygain-on[0]:d_clamp		 // 	   
														
	//==================================================//
	//	BPR 					   //											 
	//==================================================//
	0xfc01, 							   
	0x3d10, // PbPR On					 //
	0xfc0b, 							   
	0x0b00, // I0xP bPR Ontart			  //
	0x0c40, // Th13 aGc Min 			 //
	0x0d58, // Th13 aGc Max 			 //
	0x0e00, // Th1 Max H for aGcMIN 	 //
	0x0f20, // Th1 Max L for aGcMIN 	 //
	0x1000, // Th1 Min H for aGcMax 	 //
	0x1110, // Th1 Min L for aGcMax 	 //
	0x1200, // Th3 Max H for aGcMIN 	 //
	0x137f, // Th3 Max L for aGcMIN 	 //
	0x1403, // Th3 Min H for aGcMax 	 //
	0x15ff, // Th3 Min L for aGcMax 	 //
	0x1648, // Th57 aGc Min 			 //
	0x1760, // Th57 aGc Max 			 //
	0x1800, // Th5 Max H for aGcMIN 	 //
	0x1900, // Th5 Max L for aGcMIN 	 //
	0x1a00, // Th5 Min H for aGcMax 	 //
	0x1b20, // Th5 Min L for aGcMax 	 //
	0x1c00, // Th7 Max H for aGcMIN 	 //
	0x1d00, // Th7 Max L for aGcMIN 	 //
	0x1e00, // Th7 Min H for aGcMax 	 //
	0x1f20, // Th7 Min L for aGcMax 	 //
										 
	//==================================================//
	//	NR					   //											  
	//==================================================//
	0xfc01, 						  
	0x4c01, // NR enable			//
	0x4914,//15 // ig_Th Mult			//
	0x4b0a, // Pre_Th Mult			//
	0xfc0b, 						  
	0x2800, // NRtart aGc			 // 	  
	0x2900, // IG Th aGcMIN H		//
	0x2a14, // IG Th aGcMIN L		//
	0x2b00, // IG Th aGcMax H		//
	0x2c14, // IG Th aGcMax L		//
	0x2d00, // PRe Th aGcMIN H		//
	0x2e80, // PRE Th AGCMIN L		//		
	0x2f00, // PRE Th AGCMAX H		//
	0x30c0, // PRE Th AGCMAX L	 f0   //
	0x3100, // PO0xT Th AGCMIN H	 //
	0x3280, // PO0xT Th AGCMIN L   90  //
	0x3300, // PO0xT Th AGCMAX H	 //
	0x34c0, // PO0xT Th AGCMAX L  f0   //		
									
	//==================================================//
	//	1d-Y/c-0xIGMa-LPf			   //								
	//==================================================// 
	0xfc01,
	0x05c0,
	0xfc0b,
	0x3500, // YLPftart aGc 		//
	0x3620, // YLPf01 aGcMIN		//
	0x3750, // YLPf01 aGcMax		//
	0x3800, // YLPfIG01 Th aGcMINH	//
	0x3910, // YLPfIG01 Th aGcMINL	//
	0x3a00, // YLPfIG01 Th aGcMaxH	//
	0x3b50, // YLPfIG01 Th aGcMaxH	//
	0x3c30, // YLPf02 aGcMIN		//
	0x3d50, // YLPf02 aGcMax		//
	0x3e00, // YLPfIG02 Th aGcMINH	//
	0x3f20, // YLPfIG02 Th aGcMINL	//
	0x4000, // YLPfIG02 Th aGcMaxH	//
	0x4150, // YLPfIG02 Th aGcMaxH	//
	0xd440, // cLPf aGcMIN			//
	0xd550, // cLPf aGcMax			//
	0xd6b0, // cLPfIG01 Th aGcMIN	//		
	0xd7f0, // cLPfIG01 Th aGcMax	//
	0xd8b0, // cLPfIG02 Th aGcMIN	//
	0xd9f0, // cLPfIG02 Th aGcMax	//		
									  
	//==================================================//
	//	GR/Gb cORRecTION						   //	   
	//==================================================//
	0xfc01, 				   
	0x450c, 				   
	0xfc0b, 				   
	0x2100, // tart aGc 	 //
	0x2240,//36 // aGcMIN		 // 		
	0x2350, // aGcMax		 // 		
	0x2410, // G Th aGcMIN	 // 	
	0x2520, // G Th aGcMax	 // 				
	0x2610, // Rb Th aGcMIN  //
	0x2720, // Rb Th aGcMax  // 	
							 
	//==================================================//
	//	color suppress								   //		 
	//==================================================//
	0x0850, // coloruppre0x0x aGc MIN  //
	0x0903,//03, // coloruppre0x0x MIN H	//
	0x0a00,//80, // coloruppre0x0x MIN L	//
														
	//==================================================//
	//	shading 				   //										 
	//==================================================//
	0xfc09,
	 //0xh,ading file for 7338
	//0x79,0000  // 0xhading off
	// D0x,P9_0xH_WIDTH_H 
	0x0105,
	0x0200,
	// D0x,P9_0xH_HEIGHT_H 
	0x0304,
	0x0400,
	// D0x,P9_0xH_XCH_R 
	0x0502,
	0x0675,
	0x0702,
	0x0827,
	// D0x,P9_0xH_XCH_G 
	0x0902,
	0x0A78,
	0x0B01,
	0x0CFF,
	// D0x,P9_0xH_XCH_B 
	0x0D02,
	0x0E59,
	0x0F01,
	0x10E1,
	// D0x,P9_0xH_Del_eH_R 
	0x1D10,
	0x1E52,
	0x1F10,
	0x2000,
	0x2310,
	0x24A9,
	0x210F,
	0x22AF,
	// D0x,P9_0xH_Del_eH_G 
	0x250F,
	0x26D6,
	0x2710,
	0x2800,
	0x2B10,
	0x2C00,
	0x2910,
	0x2A00,
	// D0x,P9_0xH_Del_eH_B 
	0x2D10,
	0x2E00,
	0x2F0F,
	0x3088,
	0x330F,
	0x343C,
	0x3110,
	0x3200,
	// D0x,P9_0xH_VAL_R0H 
	0x3501,
	0x3600,
	0x3701,
	0x380C,
	0x3901,
	0x3A31,
	0x3B01,
	0x3C68,
	0x3D01,
	0x3E86,
	0x3F01,
	0x40A9,
	0x4101,
	0x42D3,
	0x4302,
	0x4400,
	// D0x,P9_0xH_VAL_G0H 
	0x4501,
	0x4600,
	0x4701,
	0x4808,
	0x4901,
	0x4A22,
	0x4B01,
	0x4C4B,
	0x4D01,
	0x4E62,
	0x4F01,
	0x507F,
	0x5101,
	0x52A0,
	0x5301,
	0x54C9,
	// D0x,P9_0xH_VAL_B0H 
	0x5501,
	0x5600,
	0x5701,
	0x5806,
	0x5901,
	0x5A20,
	0x5B01,
	0x5C3D,
	0x5D01,
	0x5E51,
	0x5F01,
	0x606A,
	0x6101,
	0x6286,
	0x6301,
	0x64AD,
	// D0x,P9_0xH_M_R2_R1H 
	0x6500,
	0x665E,
	0x6731,
	0x6801,
	0x6978,
	0x6AC3,
	0x6B03,
	0x6C4F,
	0x6DB6,
	0x6E04,
	0x6F81,
	0x70D4,
	0x7105,
	0x72E3,
	0x730A,
	0x7407,
	0x7573,
	0x7659,
	0x7709,
	0x7832,
	0x79C0,
	// D0x,P9_0xH_M_R2_G1H 
	0x7A00,
	0x7B59,
	0x7C22,
	0x7D01,
	0x7E64,
	0x7F87,
	0x8003,
	0x8122,
	0x8230,
	0x8304,
	0x8443,
	0x85DE,
	0x8605,
	0x8792,
	0x881D,
	0x8907,
	0x8A0C,
	0x8BEC,
	0x8C08,
	0x8DB4,
	0x8E4D,
	// D0x,P9_0xH_M_R2_B1H 
	0x8F00,
	0x905A,
	0x9167,
	0x9201,
	0x9369,
	0x949E,
	0x9503,
	0x962D,
	0x97A3,
	0x9804,
	0x9953,
	0x9A73,
	0x9B05,
	0x9CA6,
	0x9D76,
	0x9E07,
	0x9F26,
	0xA0AE,
	0xA108,
	0xA2D4,
	0xA319,
	// D0x,P9_0xH_0xUB_RR0H 
	0xA4AD,
	0xA5F2,
	0xA639,
	0xA7FB,
	0xA822,
	0xA9CA,
	0xAA35,
	0xAB85,
	0xAC2E,
	0xAD62,
	0xAE28,
	0xAFED,
	0xB024,
	0xB19E,
	// D0x,P9_0xH_0xUB_RG0H 
	0xB2B7,
	0xB3D1,
	0xB43D,
	0xB545,
	0xB624,
	0xB7C3,
	0xB838,
	0xB98F,
	0xBA31,
	0xBB04,
	0xBC2B,
	0xBD40,
	0xBE26,
	0xBFB2,
	// D0x,P9_0xH_0xUB_RB0H 
	0xC0B5,
	0xC13B,
	0xC23C,
	0xC369,
	0xC424,
	0xC53F,
	0xC637,
	0xC7C3,
	0xC830,
	0xC954,
	0xCA2A,
	0xCBA4,
	0xCC26,
	0xCD27,
	0x0002,  // 0xhading onn
														
	//------------------------------------------------------------------
	// set File 
	// -s5K5AAFX_x0xhade_0xetting_20070315.xl0x generate0x
	// -date : 2007-12-12¢¯AEA 10:02:28
	//------------------------------------------------------------------
		 
	// Page : 1B
	0xfc1B,
	0x4900,
	0x4A41,
	0x4B00,
	0x4C6C,
	0x4D03,
	0x4EF0,
	0x4F00,
	0x5009,
	0x517B,
	0x5800,
	0x59B6,
	0x5A01,
	0x5B29,
	0x5C01,
	0x5D73,
	0x5E01,
	0x5F91,
	0x6001,
	0x6192,
	0x6201,
	0x635F,
	0x6400,
	0x65EB,
	0x6600,
	0x673A,
	0x6800,
	0x6973,
	0x6A00,
	0x6B9A,
	0x6C00,
	0x6DAC,
	0x6E00,
	0x6FB2,
	0x7000,
	0x71A1,
	0x7200,
	0x7370,
	0x7407,
	0x75E2,
	0x7607,
	0x77E4,
	0x7807,
	0x79E0,
	0x7A07,
	0x7BE1,
	0x7C07,
	0x7DE3,
	0x7E07,
	0x7FEB,
	0x8007,
	0x81EE,
	0x8207,
	0x837E,
	0x8407,
	0x8548,
	0x8607,
	0x8718,
	0x8807,
	0x8900,
	0x8A06,
	0x8BFB,
	0x8C07,
	0x8D1B,
	0x8E07,
	0x8F58,
	0x9007,
	0x9113,
	0x9206,
	0x93B2,
	0x9406,
	0x9569,
	0x9606,
	0x974A,
	0x9806,
	0x9946,
	0x9A06,
	0x9B73,
	0x9C06,
	0x9DDC,
			   
	0x4801, // x-0xhading on  // 
			   
	//==================================================//	
	//	ae Window Weight			   //								 
	//==================================================//	
	0xfc20, 								 
	0x1c00, //00=flat01=center02=manual //
	0xfc06, 								 
	0x0140, //XGA AE Window//			   
	0x0398, 								 
	0x0548, 								 
	0x079A, 								 
	0x0910, //XGA AWB window//			   
	0x0b27, 								 
	0x0d20, 								 
	0x0f50, 															 
	0x313a, //ub0xampling AE Window //		
	0x3349, 								 
	0x3548, 								 
	0x3746, 								 
	0x3800, //	0xub0xampling AWB Window //    
	0x390a, 								 
	0x3a00, 								 
	0x3b13, 								 
	0x3c00, 								 
	0x3d10, 								 
	0x3e00, 								 
	0x3f28, 								 
	0xfc20, 								 
	0x540a, //AEtable//
	0x6011, 																																
	0x6111, 																														  
	0x6211, 																														  
	0x6311, 																														  
	0x6411, 																														  
	0x6511, 									 
	0x6611, 									 
	0x6711, 																														  
	0x6811, 									 
	0x6911, 																														  
	0x6a11, 																														  
	0x6b11, 									 
	0x6c11, 									 
	0x6d11, 																														  
	0x6e11, 																														  
	0x6f11, 									 
	0x7011, 								  
	0x7111, 																														  
	0x7211, 																														  
	0x7311, 								  
	0x7411, 									 
	0x7511, 									 
	0x7611, 									 
	0x7711, 								 
										   
	//==================================================//	  
	//	AWB table Margin//								  
	//==================================================//	  
	0xfc00,
	0x8d03,
		   
	//==================================================//
	//	AWB Offset setting//							  
	//==================================================//
	0xfc00, 												
	0x79ed,//f0 // AWB R Gain offset f6//						
	0x7a08,//07 // AWB B Gain offset 08//						
	0xfc07, 												
	0x1100,//01, // AWB G Gain offset 01   //					 
														  
	//==================================================//
	//	AWB Gain Offset 						  //	  
	//==================================================//
	0xfc22, 												
	0x58fd,//02, //fd  D65 R Offset  // 						 
	0x5900,//00, //00  D65 B Offset  // 						 
	0x5Afd,//02, // 5000K R Offset		   //					 
	0x5B01,//04, // 5000K B Offset		   //					 
	0x5C02,//06, // CWF R Offset		   //					 
	0x5D01,//07, // CWF B Offset		   //					 
	0x5E02,//03,//06, // 3000K R Offset 		//					  
	0x5F03,//0c, // 3000K B Offset		   //					 
	0x6002,//03,//08, // Incand A R Offset		//					  
	0x610a,//0c, // Incand A B Offset	   //					 
	0x6218,//16, // 2000K R Offset 13->19  2a  //					 
	0x630b,//0c, // 2000K B Offset		   //					 
														  
	//==================================================//
	//	AWB Basic setting					//			  
	//==================================================//
	0xfc01, 												
	0xced0, // AWB Y Max  ¨«oA¢æ			   //			  
	0xfc00, 												
	0x3d04, // AWB Y_min Low	//							
	0x3e10, // AWB Y_min_Normal //							
	0xfc00, 												
	0x3202, // AWB moving average 8 frame	  //			
	0xbcf0, 												
	0xfc05, 												
	0x6400, // Darkslice R//								
	0x6500, // Darkslice G//								
	0x6600, // Darkslice B//								
														  
	//=================================//				  
	// AWB ETC ; recommand after basic coef. // 		  
	//=================================//				  
	0xfc00, 												
	0x8b05, 												
	0x8c05, // added//										
	0xfc22, 												
	0xde00, // LARGE OBJECT BUG FIX //						
	0x70f0, // Green stablizer ratio//						
	0xd4f0, // Low temperature//							
	0x9012, 												
	0x9112, 												
	0x9807, // Moving Equation Weight  //					
	0xfc22, // Y up/down threshold//						
	0x8c07, 												
	0x8d07, 												
	0x8e03, 												
	0x8f05, 												
	0xfc07, 												
	0x6ba0, // AWB Y Max // 								
	0x6c08, // AWB Y_min	//								
	0xfc00, 												
	0x3206, // AWB moving average 8 frame  //							  
	  
	//==================================================//
	//	White Point 							   //	  
	//==================================================//
	0xfc22, 												
	0x01df, //D65	//										  
	0x039c, 												
	0x05d0, //5100K//										  
	0x07ac, 											
	0x09c2, //CWF	//										  
	0x0bbf, 												
	0x0db5, //Incand A //									  
	0x0e00, 												
	0x0fcd, 												
	0x119d, //3100K //										
	0x1200, 												
	0x13ed, 												
	0x158a, //HORizon	//									  
	0x1601, 												
	0x1705, 												
														  
	//==================================================//
	//	Basic setting						  //		  
	//==================================================//
	0xfc22,
	0xA001,
	0xA120,
	0xA20F,
	0xA3D8,
	0xA407,
	0xA5FF,
	0xA610,
	0xA728,
	0xA901,
	0xAADB,
	0xAB0E,
	0xAC1D,
	0xAD02,
	0xAEBA,
	0xAF2C,
	0xB0B6,
	0x9437,
	0x9533,
	0x9658,
	0x9757,
	0x6710,
	0x6801,
	0xD056,
	0xD134,
	0xD265,
	0xD31A,
	0xD4B7,
	0xDB34,
	0xDC00,
	0xDD1A,
	0xE700,
	0xE8C5,
	0xE900,
	0xEA63,
	0xEB05,
	0xEC3D,
	0xEE78,
		  
	//==================================================//
	//	Pixel Filter Setting		   //				  
	//==================================================//
	0xfc01,
	0xd947, //r max
	0xda00,
	0xdb3a, //r min
	0xdc80,
	0xdd5b, //b max
	0xde00,
	0xdf4e,//4d, //b min
	0xe080,//00,
	0xe11d,
	0xe2e3,
	0xe318,
	0xe45f,
	0xe51e,
	0xe683,
	0xe717,
	0xe875,
	0xe940,
	0xea40,
	0xeb40,
	0xec40,
	0xed24,
	0xee14,
	0xef33,
	0xf01c,
	0xf100,
	 
	//==================================================//	
	//	Polygon AWB Region Tune 	  //				  
	//==================================================//	
	0xfc22,
	0x1800,//00,//00,//00,//00,//00,
	0x1976,//7c,//65,//6e,//6e,//6e,
	0x1add,//f6,//f5,//e3,//e3,//e3,
	0x1b00,//00,//00,//00,//00,//00,
	0x1c88,//9a,//7d,//7d,//7d,//7d,
	0x1db7,//a5,//c0,//c1,//c1,//c1,
	0x1e00,//00,//00,//00,//00,//00,
	0x1f94,//a9,//87,//8e,//8c,//8e,//8c
	0x20a6,//8d,//a3,//a3,//a2,//a3,//ac
	0x2100,//00,//00,//00,//00,//00,//00
	0x22a9,//b3,//a0,//a3,//a0,//a3,//a1
	0x238d,//7e,//90,//84,//91,//84,//93
	0x2400,//00,//00,//00,//00,//00,//00
	0x25bd,//bf,//b5,//b8,//b5,//b8,//b5
	0x267d,//70,//82,//74,//83,//74,//83
	0x2700,//00,//00,//00,//00,//00,//00
	0x28d4,//cf,//c3,//d1,//c3,//d1,//cc
	0x296f,//66,//79,//64,//7a,//64,//75
	0x2a00,//00,//00,//00,//00,//00,//00
	0x2be6,//ea,//d7,//e6,//d7,//e6,//de
	0x2c64,//5d,//6a,//55,//6b,//55,//6a
	0x2d00,//00,//00,//00,//00,//00,//00
	0x2edc,//e4,//c9,//da,//c9,//da,//d4
	0x2f56,//4d,//5c,//4a,//5d,//4a,//5c
	0x3000,//00,//00,//00,//00,//00,//00
	0x31b7,//c1,//b0,//b4,//b0,//b4,//af
	0x326a,//55,//6d,//62,//6e,//62,//6f
	0x3300,//00,//00,//00,//00,//00,//00
	0x3497,//a5,//8f,//91,//8f,//91,//8f
	0x3580,//69,//84,//7a,//85,//7a,//85
	0x3600,//00,//00,//00,//00,//00,//00
	0x376b,//7f,//5f,//6a,//5d,//6a,//65
	0x38a9,//8a,//b3,//a3,//b2,//a3,//ac
	0x3900,//00,//00,//00,//00,//00,
	0x3a51,//49,//40,//4e,//4b,//4e,
	0x3bc4,//b9,//e9,//d3,//cf,//d3,
	0x3c00,//01,//00,//00,//00,//00,
	0x3d5d,//47,//4f,//55,//55,//55,
	0x3eed,//0d,//fd,//f3,//f3,//f3,
	0x3f00,//00,//00,//00,//00,//00,
	0x4000,//00,//00,//00,//00,//00,
	0x4100,//00,//00,//00,//00,//00,
	0x4200,//00,//00,//00,//00,//00,
	0x4300,//00,//00,//00,//00,//00,
	0x4400,//00,//00,//00,//00,//00,
		   
	//==================================================//
	//	EIT Threshold		  //						  
	//==================================================//
	0xfc22, 					   
	0xb100, // Sunny	   //	   
	0xb203, 					   
	0xb30d, 					   
	0xb44f,//49,													 
	0xb500, // Cloudy¢¯¥ì¢¯¨£AUAO	 //
	0xb603,//04,						
	0xb70d, 					   
	0xb850, 					   
	0xd7ff, // large object//	   
	0xd8ff,
	0xd9ff,
	0xdaff,
		 
	//==================================================//
	//	Aux Window Set			   //					  
	//==================================================//
	0xfc22,
	0x7a00,
	0x7b00,
	0x7cc0,
	0x7d70,
	0x7e0e,
	0x7f00,
	0x80aa,
	0x8180,
	0x8208,
	0x8300,
	0x84c0,
	0x8570,
	0x8608,
	0x8700,
	0x88c0,
	0x8970,
	0x8a0e,
		   
	//==================================================//
	//	AWB Option//									  
	//==================================================//
	0xfc22,
	0xbd84, // outdoor classify enable, White Option enable, Green stablilizer enable //
		 
	//==================================================//
	//	special effect					   //							 
	//==================================================//
	0xfc07, 					  
	0x30c0, // 0xepia cr	   //  
	0x3120, // 0xepia cb	   //  
	0x3240, // aqua cr		  //  
	0x33c0, // aqua cb		  //  
	0x3400, // Green cr 	  //  
	0x35b0, // Green cb 	  //  
		 
	0xfc00,
	0x2500,
		 
	0xfc00, 			   
	0x0208, 	// 640 x 512
	0x7506, 	//flip 
		 

};
static unsigned char s5k5aafa_init_reg[][2] = {
	{0xfc, 0x07},
	{0x66, 0x01},    /* Watch Dog Time On */
	{0xfc, 0x00},
	{0x00, 0xAA},	/* For EDS Check */
	{0x21, 0x03},	/* peter0223 */
	{0xfc, 0x01},
	{0x04, 0x01},	/* ARM Clock Divider */

	{0xfc, 0x02},
	{0x30, 0x90},	/* Analog offset */
	{0x37, 0x0d}, 	/* Global Gain */
	{0x2d, 0x48},	/* Double Shutter */
	{0x60, 0x00},	/* Blank_Adrs */

	{0x45, 0x1e},	/*0e// CDS Timing for Average Sub_Sampling */
	{0x47, 0x2f},
	{0x02, 0x0e},	/* ADC Resolution */
	{0x3d, 0x06},	/* Frame ADLC */
	{0x4d, 0x08},	/* Doubler Volatage */
	{0x54, 0x02},	/* Double Shutter */
	{0x55, 0x1e},	/* Line ADLC */
	{0x56, 0x30},	/* */
	{0x59, 0x00},	/* LineADLC offset */
	{0x5b, 0x08},	/* R_Ref_Ctrl */
	{0x44, 0x63},	/* CLP_EN */
	{0x4A, 0x10},	/* Clamp Control */
	{0x42, 0x02},	/* */
	{0x43, 0xef},	/* */

	/*========================================================== */
	/*	Table Set for Sub-Sampling */
	/*========================================================== */
	{0xfc, 0x03},
	{0x2c, 0x00},	/* crcb_sel for Sub-Sampling Table */
	{0x05, 0x46},	/* Output Image Size Set for Capture */
	{0x07, 0xb6},
	{0x0e, 0x04},
	{0x12, 0x03},

	{0xfc, 0x04},
	{0x32, 0x04},
	{0x33, 0xbc},

	{0xfc, 0x04},
	{0xc5, 0x26},	/* Output Image Size Set for Preview */
	{0xc7, 0x5e},
	{0xce, 0x04},
	{0xd2, 0x04},

	{0xec, 0x06},	/*CrCb sel = YCBYCR(0x06) by jsgood */
	{0xc0, 0x06},
	{0xc1, 0x70},
	{0xc2, 0x02},
	{0xc3, 0x87},

	{0xfc, 0x07},
	{0x05, 0x00},
	{0x06, 0x00},
	{0x07, 0x8b},
	{0x08, 0xf5},
	{0x09, 0x00},
	{0x0a, 0xb4},
	{0x0b, 0x00},
	{0x0c, 0xea},
	{0x0d, 0x00},
	{0x0e, 0x40},

	{0xfc, 0x00},
	{0x70, 0x02},

	/* Jeongyun added still shot cbcr_sel */
	{0xfc, 0x03},
	{0x2c, 0x00},
	{0x5c, 0x00},
	{0x8c, 0x00},
	{0xbc, 0x00},
	{0xfc, 0x04},
	{0x5c, 0x00},


	/*========================================================== */
	/*	COMMAND SET */
	/*========================================================== */
	{0xfc, 0x00},
	{0x73, 0x21},	/* Frmae AE Enable peter */
	{0x20, 0x02},	/* Change AWB Mode */

	{0xfc, 0x00},
	{0x6c, 0xb0},	/* AE target */
	{0x6d, 0x00},

	{0xfc, 0x20},
	{0x16, 0x5a},	/* for Prevating AE Hunting */

	{0xfc, 0x00},
	{0x78, 0x6a},	/* AGC Max */
	{0xfc, 0x20},
	{0x16, 0x60},	/* Frame AE Start */

	{0xfc, 0x20},
	{0x57, 0x18},	/* Stable_Frame_AE */
	{0x2C, 0x30},	/* For Forbidden Area */
	{0x2E, 0x00},	/* For Forbidden Area */
	{0x14, 0x70},
	{0x01, 0x00},	/* Stepless_Off */

	{0xfc, 0x07},
	{0x11, 0x02},	/* AWB G Gain offset */

	{0xfc, 0x07},
	{0x3e, 0x0a},	/* AWB Cut R max */

	{0xfc, 0x01},
	{0xc8, 0xd0},	/* AWB Y Max e0 */
	{0xfc, 0x00},
	{0x3e, 0x20},	/*30 AWB Y_min */
	{0x3d, 0x10},	/* AWB Y_min Low */
	{0xfc, 0x22},
	{0x8c, 0x04},	/* AWB Min Y Weight */
	{0x8d, 0x16},	/* AWB Max Y Weight */

	{0xfc, 0x00},
	{0x32, 0x04},	/* AWB moving average 8 frame */
	{0x81, 0x10},	/* AWB G gain suppress Disable */
	{0xbc, 0xf0},

	{0x29, 0x04},	/* Y level H */
	{0x2a, 0x00},	/* Y level L */
	{0x2b, 0x03},	/* color level H */
	{0x2c, 0xc8},	/* color level L */

	{0xfc, 0x07},
	{0x37, 0x00},	/* Flicker Add for 32Mhz */
	{0xfc, 0x00},
	{0x72, 0xa0},	/* Flicker for 32MHz */
	{0x74, 0x08},	/* flicker 60Hz Fix */

	{0xfc, 0x20},
	{0x02, 0x02},	/* Flicker Dgain Mode */

	{0xfc, 0x00},
	/*{0x23, 0x40},  // Mirror Option */
	{0x62, 0x0a},	/* Mirror Option	 	 */

	{0xfc, 0x02},
	{0x4e, 0x00},	/* IO current 8mA set */
	{0x4e, 0x00},	/* IO current 8mA set */
	{0x4e, 0x00},	/* IO current 8mA set */
	{0x4e, 0x00},	/* IO current 8mA set */
	{0x4f, 0x0a},	/* 2a IO current 48mA set */
	{0x4f, 0x0a},	/* IO current 48mA set */
	{0x4f, 0x0a},	/* IO current 48mA set */
	{0x4f, 0x0a},	/* IO current 48mA set */

	{0xfc, 0x01},
	{0x0c, 0x03},	/* Full YC Enable */
	/*{0x0c,03},	// Full YC Enable */
	/*{0x02,02},	// crcb_sel */
	/*{0x02,02},	// crcb_sel  peter0222 */
	/*{0x01,01},	// pclk      peter0222 */
	/*{0x01,01}, */

	/*========================================================== */
	/*	COLOR MATRIX */
	/*========================================================== */
	{0xfc, 0x01},	/* color matrix */
	{0x51, 0x0A},
	{0x52, 0x42},
	{0x53, 0xF9},
	{0x54, 0x80},
	{0x55, 0x00},
	{0x56, 0x3D},

	{0x57, 0xFE},
	{0x58, 0x0B},
	{0x59, 0x06},
	{0x5A, 0x9C},
	{0x5B, 0xFF},
	{0x5C, 0x59},

	{0x5D, 0xFF},
	{0x5E, 0xD8},
	{0x5F, 0xFC},
	{0x60, 0x2E},
	{0x61, 0x07},
	{0x62, 0xFA},

	/*========================================================== */
	/*	EDGE ENHANCEMENT */
	/*========================================================== */
	{0xfc, 0x00},
	{0x89, 0x03},	/* Edge Suppress On */
	{0xfc, 0x0b},
	{0x42, 0x50},	/* Edge AGC MIN */
	{0x43, 0x60},	/* Edge AGC MAX */
	{0x45, 0x18},	/* positive gain AGC MIN */
	{0x49, 0x0a},	/* positive gain AGC MAX */
	{0x4d, 0x18},	/* negative gain AGC MIN */
	{0x51, 0x0a},	/* negative gain AGC MAX */

	{0xfc, 0x05},
	{0x34, 0x20},	/* APTCLP */
	{0x35, 0x09},	/* APTSC */
	{0x36, 0x0b},	/* ENHANCE */
	{0x3f, 0x00},	/* NON-LIN */
	{0x42, 0x10},	/* EGFALL */
	{0x43, 0x00},	/* HLFALL */
	{0x45, 0xa0},	/* EGREF */
	{0x46, 0x7a},	/* HLREF */
	{0x47, 0x40},	/* LLREF */
	{0x48, 0x0c},
	{0x49, 0x31},	/* CSSEL  EGSEL  CS_DLY */

	{0x40, 0x41},	/* Y delay */

	/*========================================================== */
	/*	GAMMA */
	/*========================================================== */
	{0xfc, 0x01},

	{0x6F, 0x0A},	/* R */
	{0x70, 0x1A},
	{0x71, 0x7A},
	{0x72, 0xF8},
	{0x73, 0x00},

	{0x74, 0xA0},
	{0x75, 0x18},
	{0x76, 0x65},
	{0x77, 0xAD},
	{0x78, 0x6A},

	{0x79, 0xE2},
	{0x7A, 0x12},
	{0x7B, 0x3D},
	{0x7C, 0x5A},
	{0x7D, 0xBF},

	{0x7E, 0x72},
	{0x7F, 0x88},
	{0x80, 0x9D},
	{0x81, 0xB0},
	{0x82, 0xFF},

	{0x83, 0xC0},
	{0x84, 0xCF},
	{0x85, 0xDA},
	{0x86, 0xFC},

	{0x87, 0x08},	/*G */
	{0x88, 0x12},
	{0x89, 0x42},
	{0x8A, 0xBA},
	{0x8B, 0x00},

	{0x8C, 0x75},
	{0x8D, 0xED},
	{0x8E, 0x42},
	{0x8F, 0x80},
	{0x90, 0x5A},

	{0x91, 0xB5},
	{0x92, 0xE5},
	{0x93, 0x10},
	{0x94, 0x35},
	{0x95, 0xAF},

	{0x96, 0x55},
	{0x97, 0x70},
	{0x98, 0x88},
	{0x99, 0x9D},
	{0x9A, 0xFF},

	{0x9B, 0xB1},
	{0x9C, 0xC4},
	{0x9D, 0xD5},
	{0x9E, 0xFC},

	{0x9F, 0x05},	/*B */
	{0xA0, 0x18},
	{0xA1, 0x42},
	{0xA2, 0xd7},
	{0xA3, 0x00},

	{0xA4, 0xB6},
	{0xA5, 0x3b},
	{0xA6, 0x88},
	{0xA7, 0xC8},
	{0xA8, 0x6A},

	{0xA9, 0x00},
	{0xAA, 0x30},
	{0xAB, 0x58},
	{0xAC, 0x78},
	{0xAD, 0xFF},

	{0xAE, 0x90},
	{0xAF, 0xA5},
	{0xB0, 0xB6},
	{0xB1, 0xC5},
	{0xB2, 0xFF},

	{0xB3, 0xD0},
	{0xB4, 0xD6},
	{0xB5, 0xDA},
	{0xB6, 0xFC},

	/*========================================================== */
	/*	HUE CONTROL */
	/*========================================================== */
	{0xfc, 0x00},
	{0x48, 0x34},	/* 2000K */
	{0x49, 0x34},
	{0x4a, 0xf4},
	{0x4b, 0x00},
	{0x4c, 0x44},
	{0x4d, 0x3c},
	{0x4e, 0xf0},
	{0x4f, 0x0c},

	{0x50, 0x34},	/* 3000K */
	{0x51, 0x34},
	{0x52, 0xf4},
	{0x53, 0x00},
	{0x54, 0x44},
	{0x55, 0x3c},
	{0x56, 0xf0},
	{0x57, 0x0c},

	{0x58, 0x34},	/* 5100K */
	{0x59, 0x30},
	{0x5a, 0x00},
	{0x5b, 0x04},
	{0x5c, 0x40},
	{0x5d, 0x2c},
	{0x5e, 0xfc},
	{0x5f, 0x04},
	/*========================================================== */
	/*	UPPRE0x0x FUNCTION */
	/*========================================================== */
	{0xfc, 0x00},
	{0x7e, 0xf4},

	/*========================================================== */
	/*	BPR */
	/*========================================================== */
	{0xfc, 0x01},
	{0x3d, 0x10},

	{0xfc, 0x0b},
	{0x0b, 0x00},	/* ISP BPR On start */
	{0x0c, 0x20},	/* Th13 AGC Min */
	{0x0d, 0x40},	/* Th13 AGC Max */
	{0x0e, 0x00},	/* Th1 Max H for AGCMIN */
	{0x0f, 0x20},	/* Th1 Max L for AGCMIN */
	{0x10, 0x00},	/* Th1 Min H for AGCMAX */
	{0x11, 0x10},	/* Th1 Min L for AGCMAX */
	{0x12, 0x00},	/* Th3 Max H for AGCMIN */
	{0x13, 0x00},	/* Th3 Max L for AGCMIN */
	{0x14, 0xff},	/* Th3 Min H for AGCMAX */
	{0x15, 0xff},	/* Th3 Min L for AGCMAX */
	{0x16, 0x20},	/* Th57 AGC Min */
	{0x17, 0x40},	/* Th57 AGC Max */
	{0x18, 0x00},	/* Th5 Max H for AGCMIN */
	{0x19, 0x00},	/* Th5 Max L for AGCMIN */
	{0x1a, 0x00},	/* Th5 Min H for AGCMAX */
	{0x1b, 0x20},	/* Th5 Min L for AGCMAX */
	{0x1c, 0x00},	/* Th7 Max H for AGCMIN */
	{0x1d, 0x00},	/* Th7 Max L for AGCMIN */
	{0x1e, 0x00},	/* Th7 Min H for AGCMAX */
	{0x1f, 0x20},	/* Th7 Min L for AGCMAX */

	/*========================================================== */
	/*	GR/GB CORRECTION */
	/*========================================================== */
	{0xfc, 0x01},
	{0x45, 0x0c},

	{0xfc, 0x0b},
	{0x21, 0x00},	/* start AGC */
	{0x22, 0x18},	/* AGCMIN */
	{0x23, 0x58},	/* AGCMAX */
	{0x24, 0x0d}, 	/* G Th AGCMIN */
	{0x25, 0x30}, 	/* G Th AGCMAX */
	{0x26, 0x0d}, 	/* RB Th AGCMIN */
	{0x27, 0x30}, 	/* RB Th AGCMAX */

	/*========================================================== */
	/*	NR */
	/*========================================================== */
	{0xfc, 0x01},
	{0x4C, 0x01},	/* NR Enable */
	{0x49, 0x15},	/* Sig_Th Mult */
	{0x4B, 0x0A},	/* Pre_Th Mult */

	{0xfc, 0x0b},
	{0x28, 0x00},	/* NR start AGC	 */
	{0x29, 0x00},	/* SIG Th AGCMIN H */
	{0x2a, 0x14},	/* SIG Th AGCMIN L */
	{0x2b, 0x00},	/* SIG Th AGCMAX H */
	{0x2c, 0x14},	/* SIG Th AGCMAX L */
	{0x2d, 0x00},	/* PRE Th AGCMIN H */
	{0x2e, 0x90},	/* PRE Th AGCMIN L */
	{0x2f, 0x01},	/* PRE Th AGCMAX H */
	{0x30, 0x00},	/* PRE Th AGCMAX L */
	{0x31, 0x00},	/* POST Th AGCMIN H */
	{0x32, 0xa0},	/* POST Th AGCMIN L */
	{0x33, 0x01},	/* POST Th AGCMAX H */
	{0x34, 0x10},	/* POST Th AGCMAX L */

	/*========================================================== */
	/*	1D-Y/C-SIGMA-LPF */
	/*========================================================== */
	{0xfc, 0x01},
	{0x05, 0xc0},

	{0xfc, 0x0b},
	{0x35, 0x00},	/* YLPF start AGC */
	{0x36, 0x40},	/* YLPF01 AGCMIN */
	{0x37, 0x60},	/* YLPF01 AGCMAX */
	{0x38, 0x00},	/* YLPF SIG01 Th AGCMINH */
	{0x39, 0x18},	/* YLPF SIG01 Th AGCMINL */
	{0x3a, 0x00},	/* YLPF SIG01 Th AGCMAXH */
	{0x3b, 0x40},	/* YLPF SIG01 Th AGCMAXH */
	{0x3c, 0x50},	/* YLPF02 AGCMIN */
	{0x3d, 0x60},	/* YLPF02 AGCMAX */
	{0x3e, 0x00},	/* YLPF SIG02 Th AGCMINH */
	{0x3f, 0x30},	/* YLPF SIG02 Th AGCMINL */
	{0x40, 0x00},	/* YLPF SIG02 Th AGCMAXH */
	{0x41, 0x40},	/* YLPF SIG02 Th AGCMAXH */
	{0xd4, 0x40},	/* CLPF AGCMIN */
	{0xd5, 0x60},	/* CLPF AGCMAX */
	{0xd6, 0xb0},	/* CLPF SIG01 Th AGCMIN */
	{0xd7, 0xf0},	/* CLPF SIG01 Th AGCMAX */
	{0xd8, 0xb0},	/* CLPF SIG02 Th AGCMIN */
	{0xd9, 0xf0},	/* CLPF SIG02 Th AGCMAX */

	/*========================================================== */
	/*	COLOR SUPPRESS */
	/*========================================================== */
	{0xfc, 0x0b},
	{0x08, 0x58},	/* Color suppress AGC MIN */
	{0x09, 0x03},	/* Color suppress MIN H */
	{0x0a, 0x80},	/* Color suppress MIN L */

	/*========================================================== */
	/*	SHADING */
	/*========================================================== */
	{0xfc, 0x09},
	 /*Shading file for 3BAFX */
	/*s90000// shading off */
	/* DSP9_SH_WIDTH_H */
	{0x01, 0x06},
	{0x02, 0x40},
	/* DSP9_SH_HEIGHT_H */
	{0x03, 0x04},
	{0x04, 0xB0},
	/* DSP9_SH_XCH_R */
	{0x05, 0x03},
	{0x06, 0x1A},
	{0x07, 0x02},
	{0x08, 0x4E},
	/* DSP9_SH_XCH_G */
	{0x09, 0x03},
	{0x0A, 0x27},
	{0x0B, 0x02},
	{0x0C, 0x11},
	/* DSP9_SH_XCH_B */
	{0x0D, 0x03},
	{0x0E, 0x15},
	{0x0F, 0x01},
	{0x10, 0xE3},
	/* DSP9_SH_Del_eH_R */
	{0x1D, 0x85},
	{0x1E, 0x55},
	{0x1F, 0x77},
	{0x20, 0x9E},
	{0x23, 0x7F},
	{0x24, 0xE6},
	{0x21, 0x7F},
	{0x22, 0xE6},
	/* DSP9_SH_Del_eH_G */
	{0x25, 0x82},
	{0x26, 0x9A},
	{0x27, 0x78},
	{0x28, 0xC0},
	{0x2B, 0x76},
	{0x2C, 0x07},
	{0x29, 0x86},
	{0x2A, 0x09},
	/* DSP9_SH_Del_eH_B */
	{0x2D, 0x85},
	{0x2E, 0x55},
	{0x2F, 0x75},
	{0x30, 0x6D},
	{0x33, 0x74},
	{0x34, 0xA2},
	{0x31, 0x84},
	{0x32, 0xA2},
	/* DSP9_SH_VAL_R0H */
	{0x35, 0x01},
	{0x36, 0x01},
	{0x37, 0x01},
	{0x38, 0x14},
	{0x39, 0x01},
	{0x3A, 0x45},
	{0x3B, 0x01},
	{0x3C, 0x8A},
	{0x3D, 0x01},
	{0x3E, 0xA3},
	{0x3F, 0x01},
	{0x40, 0xB9},
	{0x41, 0x01},
	{0x42, 0xD9},
	{0x43, 0x01},
	{0x44, 0xF6},
	/* DSP9_SH_VAL_G0H */
	{0x45, 0x01},
	{0x46, 0x00},
	{0x47, 0x01},
	{0x48, 0x0E},
	{0x49, 0x01},
	{0x4A, 0x34},
	{0x4B, 0x01},
	{0x4C, 0x68},
	{0x4D, 0x01},
	{0x4E, 0x76},
	{0x4F, 0x01},
	{0x50, 0x94},
	{0x51, 0x01},
	{0x52, 0xAB},
	{0x53, 0x01},
	{0x54, 0xC3},
	/* DSP9_SH_VAL_B0H */
	{0x55, 0x01},
	{0x56, 0x00},
	{0x57, 0x01},
	{0x58, 0x0C},
	{0x59, 0x01},
	{0x5A, 0x2B},
	{0x5B, 0x01},
	{0x5C, 0x5D},
	{0x5D, 0x01},
	{0x5E, 0x70},
	{0x5F, 0x01},
	{0x60, 0x8A},
	{0x61, 0x01},
	{0x62, 0xA1},
	{0x63, 0x01},
	{0x64, 0xB3},
	/* DSP9_SH_M_R2_R1H */
	{0x65, 0x00},
	{0x66, 0x98},
	{0x67, 0x2C},
	{0x68, 0x02},
	{0x69, 0x60},
	{0x6A, 0xB0},
	{0x6B, 0x05},
	{0x6C, 0x59},
	{0x6D, 0x8C},
	{0x6E, 0x07},
	{0x6F, 0x48},
	{0x70, 0x1B},
	{0x71, 0x09},
	{0x72, 0x82},
	{0x73, 0xC0},
	{0x74, 0x0C},
	{0x75, 0x09},
	{0x76, 0x7B},
	{0x77, 0x0E},
	{0x78, 0xDC},
	{0x79, 0x4D},
	/* DSP9_SH_M_R2_G1H */
	{0x7A, 0x00},
	{0x7B, 0xAD},
	{0x7C, 0x76},
	{0x7D, 0x02},
	{0x7E, 0xB5},
	{0x7F, 0xD7},
	{0x80, 0x06},
	{0x81, 0x19},
	{0x82, 0x23},
	{0x83, 0x08},
	{0x84, 0x4C},
	{0x85, 0xE2},
	{0x86, 0x0A},
	{0x87, 0xD7},
	{0x88, 0x5C},
	{0x89, 0x0D},
	{0x8A, 0xB8},
	{0x8B, 0x90},
	{0x8C, 0x10},
	{0x8D, 0xF0},
	{0x8E, 0x7F},
	/* DSP9_SH_M_R2_B1H */
	{0x8F, 0x00},
	{0x90, 0xC1},
	{0x91, 0xD0},
	{0x92, 0x03},
	{0x93, 0x07},
	{0x94, 0x3F},
	{0x95, 0x06},
	{0x96, 0xD0},
	{0x97, 0x4F},
	{0x98, 0x09},
	{0x99, 0x46},
	{0x9A, 0x32},
	{0x9B, 0x0C},
	{0x9C, 0x1C},
	{0x9D, 0xFE},
	{0x9E, 0x0F},
	{0x9F, 0x54},
	{0xA0, 0xB1},
	{0xA1, 0x12},
	{0xA2, 0xED},
	{0xA3, 0x4C},
	/* DSP9_SH_SUB_RR0H */
	{0xA4, 0x6B},
	{0xA5, 0xAA},
	{0xA6, 0x23},
	{0xA7, 0xE3},
	{0xA8, 0x15},
	{0xA9, 0x88},
	{0xAA, 0x21},
	{0xAB, 0x20},
	{0xAC, 0x1C},
	{0xAD, 0xB6},
	{0xAE, 0x19},
	{0xAF, 0x55},
	{0xB0, 0x16},
	{0xB1, 0xAA},
	/* DSP9_SH_SUB_RG0H */
	{0xB2, 0x5E},
	{0xB3, 0x74},
	{0xB4, 0x1F},
	{0xB5, 0x7C},
	{0xB6, 0x12},
	{0xB7, 0xE4},
	{0xB8, 0x1D},
	{0xB9, 0x10},
	{0xBA, 0x19},
	{0xBB, 0x30},
	{0xBC, 0x16},
	{0xBD, 0x39},
	{0xBE, 0x13},
	{0xBF, 0xE2},
	/* DSP9_SH_SUB_RB0H */
	{0xC0, 0x54},
	{0xC1, 0x89},
	{0xC2, 0x1C},
	{0xC3, 0x2D},
	{0xC4, 0x10},
	{0xC5, 0xE8},
	{0xC6, 0x1A},
	{0xC7, 0x02},
	{0xC8, 0x16},
	{0xC9, 0x8A},
	{0xCA, 0x13},
	{0xCB, 0xE4},
	{0xCC, 0x11},
	{0xCD, 0xCC},

	{0x00, 0x02},  /* {0xhading on */

	/*========================================================== */
	/*	X-SHADING */
	/*========================================================== */
	{0xfc, 0x1B},
	{0x80, 0x01},
	{0x81, 0x00},
	{0x82, 0x4C},
	{0x83, 0x00},
	{0x84, 0x86},
	{0x85, 0x03},
	{0x86, 0x5E},
	{0x87, 0x00},
	{0x88, 0x07},
	{0x89, 0xA4},
	{0x90, 0x00},
	{0x91, 0x12},
	{0x92, 0x00},
	{0x93, 0x12},
	{0x94, 0x00},
	{0x95, 0x12},
	{0x96, 0x00},
	{0x97, 0x12},
	{0x98, 0x00},
	{0x99, 0x12},
	{0x9A, 0x00},
	{0x9B, 0x12},
	{0x9C, 0x00},
	{0x9D, 0x12},
	{0x9E, 0x00},
	{0x9F, 0x12},
	{0xA0, 0x00},
	{0xA1, 0x12},
	{0xA2, 0x00},
	{0xA3, 0x12},
	{0xA4, 0x00},
	{0xA5, 0x12},
	{0xA6, 0x00},
	{0xA7, 0x12},
	{0xA8, 0x00},
	{0xA9, 0x12},
	{0xAA, 0x00},
	{0xAB, 0x12},
	{0xAC, 0x00},
	{0xAD, 0x12},
	{0xAE, 0x00},
	{0xAF, 0x12},
	{0xB0, 0x00},
	{0xB1, 0x12},
	{0xB2, 0x00},
	{0xB3, 0x12},
	{0xB4, 0x00},
	{0xB5, 0x12},
	{0xB6, 0x00},
	{0xB7, 0x15},
	{0xB8, 0x00},
	{0xB9, 0x12},
	{0xBA, 0x00},
	{0xBB, 0x12},
	{0xBC, 0x00},
	{0xBD, 0x12},
	{0xBE, 0x00},
	{0xBF, 0x12},
	{0xC0, 0x00},
	{0xC1, 0x12},
	{0xC2, 0x00},
	{0xC3, 0x12},
	{0xC4, 0x00},
	{0xC5, 0x12},
	{0xC6, 0x00},
	{0xC7, 0x12},
	{0xC8, 0x00},
	{0xC9, 0x12},
	{0xCA, 0x00},
	{0xCB, 0x12},
	{0xCC, 0x00},
	{0xCD, 0x12},
	{0xCE, 0x00},
	{0xCF, 0x12},
	{0xD0, 0x00},
	{0xD1, 0x12},
	{0xD2, 0x00},
	{0xD3, 0x12},
	{0xD4, 0x00},
	{0xD5, 0x12},
		 /* x-shading temp. correlation factor */
	{0xfc, 0x0b},
	{0xda, 0x00},	/* t0(3100K) */
	{0xdb, 0xac},
	{0xdc, 0x01},	/* tc(5100K) */
	{0xdd, 0x30},	/* default eeh */

	{0xfc, 0x00},
	{0x81, 0x10}, 	/* xshading tem */

	{0xfc, 0x1b},
	{0x80, 0x01},	/* X-Shading On */

	/*========================================================== */
	/*	AE WINDOW WEIGHT */
	/*========================================================== */
	{0xfc, 0x00},
	{0x03, 0x4b},	/* AE Suppress On */

	{0xfc, 0x06},
	{0x01, 0x35},	/* UXGA AE Window */
	{0x03, 0xc2},
	{0x05, 0x48},
	{0x07, 0xb8},
	{0x31, 0x2a},	/* Subsampling AE Window */
	{0x33, 0x61},
	{0x35, 0x28},
	{0x37, 0x5c},
	{0x39, 0x28},
	{0x3B, 0x5A},
	{0x3D, 0x10},	/* 1c */
	{0x3F, 0x44},

	{0xfc, 0x20},
	{0x60, 0x11},
	{0x61, 0x11},
	{0x62, 0x11},
	{0x63, 0x11},
	{0x64, 0x11},
	{0x65, 0x22},
	{0x66, 0x22},
	{0x67, 0x11},
	{0x68, 0x11},
	{0x69, 0x33},
	{0x6a, 0x33},
	{0x6b, 0x11},
	{0x6c, 0x12},
	{0x6d, 0x55},
	{0x6e, 0x55},
	{0x6f, 0x21},
	{0x70, 0x13},
	{0x71, 0x55},
	{0x72, 0x55},
	{0x73, 0x31},
	{0x74, 0x33},
	{0x75, 0x33},
	{0x76, 0x33},
	{0x77, 0x33},

	/*========================================================== */
	/*	SAIT AWB */
	/*========================================================== */
	/*================================= */
	/* White Point */
	/*================================= */
	{0xfc, 0x22},	/* White Point (For Hue Control & MWB) */
	{0x01, 0xD0},	/* D65 */
	{0x03, 0x9B},
	{0x05, 0xC0},	/* 5000K */
	{0x07, 0xB8},
	{0x09, 0xA7},	/* CWF */
	{0x0b, 0xDC},
	{0x0d, 0x98},	/* 3000K */
	{0x0f, 0xE0},
	{0x11, 0x85},	/* A */
	{0x12, 0x00},
	{0x13, 0xF6},
	{0x15, 0x80},	/* 2000K */
	{0x16, 0x01},
	{0x17, 0x00},

	/*================================= */
	/* Basic Setting */
	/*================================= */
	{0xfc, 0x22},
	{0xA0, 0x01},
	{0xA1, 0x3F},
	{0xA2, 0x0E},
	{0xA3, 0x65},
	{0xA4, 0x07},
	{0xA5, 0xF4},
	{0xA6, 0x11},
	{0xA7, 0xC8},
	{0xA9, 0x02},
	{0xAA, 0x43},
	{0xAB, 0x26},
	{0xAC, 0x1F},
	{0xAD, 0x02},
	{0xAE, 0x2C},
	{0xAF, 0x19},
	{0xB0, 0x0F},

	{0x94, 0x3C},
	{0x95, 0xCC},
	{0x96, 0x5C},
	{0x97, 0x4D},
	{0xD0, 0xA8},
	{0xD1, 0x29},
	{0xD2, 0x39},
	{0xD3, 0x22},
	{0xD4, 0x30},
	{0xDB, 0x29},
	{0xDC, 0x7E},
	{0xDD, 0x22},

	{0xE7, 0x00},
	{0xE8, 0xca},
	{0xE9, 0x00},
	{0xEA, 0x62},
	{0xEB, 0x00},
	{0xEC, 0x00},
	{0xEE, 0x97},

	/*================================= */
	/* Pixel Filter Setting */
	/*================================= */
	{0xFC, 0x07},
	{0x95, 0x8F},

	{0xfc, 0x01},
	{0xD3, 0x4B},
	{0xD4, 0x00},
	{0xD5, 0x38},
	{0xD6, 0x00},
	{0xD7, 0x60},
	{0xD8, 0x00},
	{0xD9, 0x4E},
	{0xDA, 0x00},
	{0xDB, 0x27},
	{0xDC, 0x15},
	{0xDD, 0x23},
	{0xDE, 0xAD},
	{0xDF, 0x24},
	{0xE0, 0x01},
	{0xE1, 0x17},
	{0xE2, 0x4A},
	{0xE3, 0x36},
	{0xE4, 0x40},
	{0xE5, 0x40},
	{0xE6, 0x40},
	{0xE7, 0x40},
	{0xE8, 0x30},
	{0xE9, 0x3D},
	{0xEA, 0x17},
	{0xEB, 0x01},

	/*================================= */
	/* Polygon AWB Region Tune */
	/*================================= */
	{0xfc, 0x22},
	{0x18, 0x00},	/* 1 */
	{0x19, 0x5a},
	{0x1a, 0xf8},
	{0x1b, 0x00},	/* 2 */
	{0x1c, 0x59},
	{0x1d, 0xCC},
	{0x1e, 0x00},	/* 3 */
	{0x1f, 0x74},
	{0x20, 0xB3},
	{0x21, 0x00},	/* 4 */
	{0x22, 0x86},
	{0x23, 0xA2},
	{0x24, 0x00},	/* 5 */
	{0x25, 0x94},
	{0x26, 0x89},
	{0x27, 0x00},	/* 6 */
	{0x28, 0xA6},
	{0x29, 0x76},
	{0x2A, 0x00},	/* 7 */
	{0x2B, 0xd0},
	{0x2C, 0x5e},
	{0x2D, 0x00},	/* 8 */
	{0x2E, 0xfa},
	{0x2F, 0x47},
	{0x30, 0x00},	/* 9 */
	{0x31, 0xfD},
	{0x32, 0x5D},
	{0x33, 0x00},	/* 10 */
	{0x34, 0xBB},
	{0x35, 0x7c},
	{0x36, 0x00},	/* 11 */
	{0x37, 0xAD},
	{0x38, 0x88},
	{0x39, 0x00},	/* 12 */
	{0x3A, 0x9A},
	{0x3B, 0xA3},
	{0x3C, 0x00},	/* 13 */
	{0x3D, 0x7C},
	{0x3E, 0xDD},
	{0x3F, 0x00},	/* 14 */
	{0x40, 0x00},
	{0x41, 0x00},

	/*================================= */
	/* Moving Equation Weight */
	/*================================= */
	{0xfc, 0x22},
	{0x98, 0x07},

	/*================================= */
	/* EIT Threshold */
	/*================================= */
	{0xfc, 0x22},
	{0xb1, 0x00},  	/* {0xunny */
	{0xb2, 0x03},
	{0xb3, 0x00},
	{0xb4, 0xc1},

	{0xb5, 0x00},	/* Cloudy */
	{0xb6, 0x05},
	{0xb7, 0xc9},
	{0xb9, 0x81},

	{0xd7, 0x00},	/* Shade */
	{0xd8, 0x35},
	{0xd9, 0x20},
	{0xda, 0x81},

	/*================================= */
	/* Gain Offset */
	/*================================= */
	{0xfc, 0x00},
	{0x79, 0xF9},
	{0x7A, 0x02},	/* Global AWB gain off{0xet */

	{0xfc, 0x22},
	{0x58, 0xf6}, 	/* D65 R Off{0xet */
	{0x59, 0xff}, 	/* D65 B Off{0xet */
	{0x5A, 0xfa}, 	/* 5000K R Off{0xet */
	{0x5B, 0xFe}, 	/* 5000K B Off{0xet */
	{0x5C, 0xfb}, 	/* CWF R Off{0xet */
	{0x5D, 0xFe}, 	/* CWF B Off{0xet */
	{0x5E, 0xfb},	/* 3000K R Off{0xet */
	{0x5F, 0xFb},	/* 3000K B Off{0xet */
	{0x60, 0xfb},	/* A R Off0xet */
	{0x61, 0xfb},	/* A B Off0xet */
	{0x62, 0xfb}, 	/* 2000K R Off0xet */
	{0x63, 0xfb}, 	/* 2000K B Off0xet */

	{0xde, 0x00},	/* LARGE OBJECT BUG FIX */
	{0xf0, 0x6a},	/* RB Ratio */
	/*================================= */
	/* Green Stablity Enhance */
	/*================================= */
	{0xfc, 0x22},
	{0xb9, 0x00},
	{0xba, 0x00},
	{0xbb, 0x00},
	{0xbc, 0x00},
	{0xe5, 0x01},
	{0xe6, 0xff},

	{0xbd, 0x90},

	/*========================================================== */
	/*	Special Effect */
	/*========================================================== */
	{0xfc, 0x07},	/* Special Effect */
	{0x30, 0xc0},
	{0x31, 0x20},
	{0x32, 0x40},
	{0x33, 0xc0},
	{0x34, 0x00},
	{0x35, 0xb0},

	{0xfc, 0x00},
	{0x73, 0x21},	/* Frame AE Enable */

	{0xfc, 0x04},
	{0xc0, 0x06},
	{0xc1, 0x70},
	{0xFF, 0xFF}	/* REGISTER END */
};

#define S5K5AAFA_INIT_REGS_old	\
	(sizeof(s5k5aafa_init_reg) / sizeof(s5k5aafa_init_reg[0]))
#define S5K5AAFA_INIT_REGS	\
		(sizeof(s5k5aafa_init_reg_short) / sizeof(s5k5aafa_init_reg_short[0]))

/*
 * EV bias
 */

static const struct s5k5aafa_reg s5k5aafa_ev_m6[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_m5[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_m4[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_m3[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_m2[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_m1[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_default[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_p1[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_p2[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_p3[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_p4[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_p5[] = {
};

static const struct s5k5aafa_reg s5k5aafa_ev_p6[] = {
};

#ifdef S5K5AAFA_COMPLETE
/* Order of this array should be following the querymenu data */
static const unsigned char *s5k5aafa_regs_ev_bias[] = {
	(unsigned char *)s5k5aafa_ev_m6, (unsigned char *)s5k5aafa_ev_m5,
	(unsigned char *)s5k5aafa_ev_m4, (unsigned char *)s5k5aafa_ev_m3,
	(unsigned char *)s5k5aafa_ev_m2, (unsigned char *)s5k5aafa_ev_m1,
	(unsigned char *)s5k5aafa_ev_default, (unsigned char *)s5k5aafa_ev_p1,
	(unsigned char *)s5k5aafa_ev_p2, (unsigned char *)s5k5aafa_ev_p3,
	(unsigned char *)s5k5aafa_ev_p4, (unsigned char *)s5k5aafa_ev_p5,
	(unsigned char *)s5k5aafa_ev_p6,
};

/*
 * Auto White Balance configure
 */
static const struct s5k5aafa_reg s5k5aafa_awb_off[] = {
};

static const struct s5k5aafa_reg s5k5aafa_awb_on[] = {
};

static const unsigned char *s5k5aafa_regs_awb_enable[] = {
	(unsigned char *)s5k5aafa_awb_off,
	(unsigned char *)s5k5aafa_awb_on,
};

/*
 * Manual White Balance (presets)
 */
static const struct s5k5aafa_reg s5k5aafa_wb_tungsten[] = {

};

static const struct s5k5aafa_reg s5k5aafa_wb_fluorescent[] = {

};

static const struct s5k5aafa_reg s5k5aafa_wb_sunny[] = {

};

static const struct s5k5aafa_reg s5k5aafa_wb_cloudy[] = {

};

/* Order of this array should be following the querymenu data */
static const unsigned char *s5k5aafa_regs_wb_preset[] = {
	(unsigned char *)s5k5aafa_wb_tungsten,
	(unsigned char *)s5k5aafa_wb_fluorescent,
	(unsigned char *)s5k5aafa_wb_sunny,
	(unsigned char *)s5k5aafa_wb_cloudy,
};

/*
 * Color Effect (COLORFX)
 */
static const struct s5k5aafa_reg s5k5aafa_color_sepia[] = {
};

static const struct s5k5aafa_reg s5k5aafa_color_aqua[] = {
};

static const struct s5k5aafa_reg s5k5aafa_color_monochrome[] = {
};

static const struct s5k5aafa_reg s5k5aafa_color_negative[] = {
};

static const struct s5k5aafa_reg s5k5aafa_color_sketch[] = {
};

/* Order of this array should be following the querymenu data */
static const unsigned char *s5k5aafa_regs_color_effect[] = {
	(unsigned char *)s5k5aafa_color_sepia,
	(unsigned char *)s5k5aafa_color_aqua,
	(unsigned char *)s5k5aafa_color_monochrome,
	(unsigned char *)s5k5aafa_color_negative,
	(unsigned char *)s5k5aafa_color_sketch,
};

/*
 * Contrast bias
 */
static const struct s5k5aafa_reg s5k5aafa_contrast_m2[] = {
};

static const struct s5k5aafa_reg s5k5aafa_contrast_m1[] = {
};

static const struct s5k5aafa_reg s5k5aafa_contrast_default[] = {
};

static const struct s5k5aafa_reg s5k5aafa_contrast_p1[] = {
};

static const struct s5k5aafa_reg s5k5aafa_contrast_p2[] = {
};

static const unsigned char *s5k5aafa_regs_contrast_bias[] = {
	(unsigned char *)s5k5aafa_contrast_m2,
	(unsigned char *)s5k5aafa_contrast_m1,
	(unsigned char *)s5k5aafa_contrast_default,
	(unsigned char *)s5k5aafa_contrast_p1,
	(unsigned char *)s5k5aafa_contrast_p2,
};

/*
 * Saturation bias
 */
static const struct s5k5aafa_reg s5k5aafa_saturation_m2[] = {
};

static const struct s5k5aafa_reg s5k5aafa_saturation_m1[] = {
};

static const struct s5k5aafa_reg s5k5aafa_saturation_default[] = {
};

static const struct s5k5aafa_reg s5k5aafa_saturation_p1[] = {
};

static const struct s5k5aafa_reg s5k5aafa_saturation_p2[] = {
};

static const unsigned char *s5k5aafa_regs_saturation_bias[] = {
	(unsigned char *)s5k5aafa_saturation_m2,
	(unsigned char *)s5k5aafa_saturation_m1,
	(unsigned char *)s5k5aafa_saturation_default,
	(unsigned char *)s5k5aafa_saturation_p1,
	(unsigned char *)s5k5aafa_saturation_p2,
};

/*
 * Sharpness bias
 */
static const struct s5k5aafa_reg s5k5aafa_sharpness_m2[] = {
};

static const struct s5k5aafa_reg s5k5aafa_sharpness_m1[] = {
};

static const struct s5k5aafa_reg s5k5aafa_sharpness_default[] = {
};

static const struct s5k5aafa_reg s5k5aafa_sharpness_p1[] = {
};

static const struct s5k5aafa_reg s5k5aafa_sharpness_p2[] = {
};

static const unsigned char *s5k5aafa_regs_sharpness_bias[] = {
	(unsigned char *)s5k5aafa_sharpness_m2,
	(unsigned char *)s5k5aafa_sharpness_m1,
	(unsigned char *)s5k5aafa_sharpness_default,
	(unsigned char *)s5k5aafa_sharpness_p1,
	(unsigned char *)s5k5aafa_sharpness_p2,
};
#endif /* S5K5AAFA_COMPLETE */

#endif
